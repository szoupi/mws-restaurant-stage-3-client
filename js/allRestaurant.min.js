var $jscomp=$jscomp||{};$jscomp.scope={};$jscomp.getGlobal=function(a){return"undefined"!=typeof window&&window===a?a:"undefined"!=typeof global&&null!=global?global:a};$jscomp.global=$jscomp.getGlobal(this);$jscomp.findInternal=function(a,b,c){a instanceof String&&(a=String(a));for(var d=a.length,e=0;e<d;e++){var f=a[e];if(b.call(c,f,e,a))return{i:e,v:f}}return{i:-1,v:void 0}};$jscomp.ASSUME_ES5=!1;$jscomp.ASSUME_NO_NATIVE_MAP=!1;$jscomp.ASSUME_NO_NATIVE_SET=!1;
$jscomp.defineProperty=$jscomp.ASSUME_ES5||"function"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value)};$jscomp.polyfill=function(a,b,c,d){if(b){c=$jscomp.global;a=a.split(".");for(d=0;d<a.length-1;d++){var e=a[d];e in c||(c[e]={});c=c[e]}a=a[a.length-1];d=c[a];b=b(d);b!=d&&null!=b&&$jscomp.defineProperty(c,a,{configurable:!0,writable:!0,value:b})}};
$jscomp.polyfill("Array.prototype.find",function(a){return a?a:function(a,c){return $jscomp.findInternal(this,a,c).v}},"es6","es3");var DBHelper=function(){};DBHelper.fetchReviews=function(a){return fetch(DBHelper.DATABASE_REVIEWS_URL+a).then(function(a){return a.json()}).then(function(a){return a}).catch(function(a){console.log(a)})};DBHelper.fetchRestaurants=function(a){fetch(DBHelper.DATABASE_URL).then(function(a){return a.json()}).then(function(b){return a(null,b)}).catch(function(a){console.log(a)})};
DBHelper.fetchRestaurantById=function(a,b){DBHelper.fetchRestaurants(function(c,d){c?b(c,null):(c=d.find(function(b){return b.id==a}))?b(null,c):b("Restaurant does not exist",null)})};DBHelper.fetchRestaurantByCuisine=function(a,b){DBHelper.fetchRestaurants(function(c,d){c?b(c,null):(c=d.filter(function(b){return b.cuisine_type==a}),b(null,c))})};
DBHelper.fetchRestaurantByNeighborhood=function(a,b){DBHelper.fetchRestaurants(function(c,d){c?b(c,null):(c=d.filter(function(b){return b.neighborhood==a}),b(null,c))})};DBHelper.fetchRestaurantByCuisineAndNeighborhood=function(a,b,c){DBHelper.fetchRestaurants(function(d,e){d?c(d,null):(d=e,"all"!=a&&(d=d.filter(function(b){return b.cuisine_type==a})),"all"!=b&&(d=d.filter(function(a){return a.neighborhood==b})),c(null,d))})};
DBHelper.fetchNeighborhoods=function(a){DBHelper.fetchRestaurants(function(b,c){if(b)a(b,null);else{var d=c.map(function(a,b){return c[b].neighborhood});b=d.filter(function(a,b){return d.indexOf(a)==b});a(null,b)}})};DBHelper.fetchCuisines=function(a){DBHelper.fetchRestaurants(function(b,c){if(b)a(b,null);else{var d=c.map(function(a,b){return c[b].cuisine_type});b=d.filter(function(a,b){return d.indexOf(a)==b});a(null,b)}})};DBHelper.urlForRestaurant=function(a){return"./restaurant.html?id\x3d"+a.id};
DBHelper.imageUrlForRestaurant=function(a){return"/img/"+a.photograph};DBHelper.mapMarkerForRestaurant=function(a,b){return new google.maps.Marker({position:a.latlng,title:a.name,url:DBHelper.urlForRestaurant(a),map:b,animation:google.maps.Animation.DROP})};$jscomp.global.Object.defineProperties(DBHelper,{DATABASE_URL:{configurable:!0,enumerable:!0,get:function(){return"http://localhost:1337/restaurants"}},DATABASE_REVIEWS_URL:{configurable:!0,enumerable:!0,get:function(){return"http://localhost:1337/reviews/?restaurant_id\x3d"}}});
var restaurant,map;window.initMap=function(){fetchRestaurantFromURL(function(b,c){b?console.error(b):(self.map=new google.maps.Map(document.getElementById("map"),{zoom:16,center:c.latlng,scrollwheel:!1}),fillBreadcrumb(),DBHelper.mapMarkerForRestaurant(self.restaurant,self.map),addCachedReviewsToServer())})};
var addCachedReviewsToServer=function(){var b=indexedDB.open("newReviewsDB",12);b.onerror=function(b){console.log("indexedDB error: "+this.error)};b.onupgradeneeded=function(b){console.log("onupgradeneeded request triggered: "+b);b=b.target.result;b.onerror=function(a){console.log("Error loading database")};b.onversionchange=function(a){console.log("version changed, user should be informed, db:newReviewsDB")};b.createObjectStore("NewReview",{keyPath:"name"});console.log("onupgradeneeded event triggered, object store restaurants created")};
b.onsuccess=function(b){b=b.target.result;b.onerror=function(a){console.log("Database error: "+a.target.errorCode)};var a=b.transaction("NewReview","readwrite").objectStore("NewReview");a.openCursor().onsuccess=function(b){var c=b.target.result;if(c){console.log("restaurant_id for review key: "+c.key+" is "+c.value.restaurant_id);var d=c.value.restaurant_id;postData("http://localhost:1337/reviews/",{restaurant_id:d,name:c.value.name,rating:c.value.rating,comments:c.value.comments}).then(function(a){console.log("restaurant id "+
d+" added to db from idb")}).catch(function(a){console.log(a)});a.delete(c.key).onsuccess=function(a){console.log("entry deleted, key: "+c.key)};c.continue()}else console.log("No more entries from idb to post!")}}},fetchRestaurantFromURL=function(b){if(self.restaurant)b(null,self.restaurant);else{var c=getParameterByName("id");c?DBHelper.fetchRestaurantById(c,function(a,c){(self.restaurant=c)?(fillRestaurantHTML(),b(null,c)):console.error(a)}):(error="No restaurant id in URL",b(error,null))}},fillRestaurantHTML=
function(b){b=void 0===b?self.restaurant:b;document.getElementById("restaurant-name").innerHTML=b.name;document.getElementById("restaurant-address").innerHTML=b.address;var c=document.getElementById("restaurant-img");c.className="restaurant-img";c.alt="image of "+b.name+" restaurant";c.src=DBHelper.imageUrlForRestaurant(b)+".webp";document.getElementById("restaurant-cuisine").innerHTML=b.cuisine_type;b.operating_hours&&fillRestaurantHoursHTML();fillReviewsHTML()},fillReviewsHTML=function(){var b=
self.restaurant.id,c=document.getElementById("reviews-container"),a=document.createElement("h2");a.innerHTML="Reviews";c.appendChild(a);a=document.createElement("button");a.innerHTML="Your opinion matters! Add your comment";a.className="button";a.id="add-review-button";a.onclick=createForm;c.appendChild(a);DBHelper.fetchReviews(b).then(function(a){var b=document.getElementById("reviews-list");a.forEach(function(a){b.appendChild(createReviewHTML(a))});c.appendChild(b)})||(b=document.createElement("p"),
b.innerHTML="No reviews yet!",c.appendChild(b))},createForm=function(){var b=document.getElementById("add-review"),c=document.createElement("form"),a=document.createElement("label");a.htmlFor="reviewer_name";a.innerHTML="Your name:";c.append(a);a=document.createElement("input");a.type="text";a.name="reviewer_name";a.id="reviewer_name_fld";c.append(a);a=document.createElement("label");a.htmlFor="rating";a.innerHTML="Rating:";c.append(a);a=document.createElement("select");a.name="rating";a.id="rating_fld";
for(var d=1;6>d;d++){var e=document.createElement("option");e.innerHTML=d;e.value=d;a.append(e)}c.append(a);a=document.createElement("label");a.htmlFor="comment_text";a.innerHTML="Comment:";c.append(a);a=document.createElement("textarea");a.type="text";a.className="textarea";a.name="comment_text";a.id="comment_text_fld";c.append(a);a=document.createElement("button");a.className="button";a.id="submitReview";a.innerHTML="Submit Review";a.onclick=postReview;c.append(a);b.appendChild(c)};
function postReview(b){function c(){var a=document.getElementById("add-review"),b=document.createElement("div");b.classname=alert;b.innerHTML="You are offline. Your review will be saved. When you are online again it will be reposted by itself!";a.append(b)}function a(){console.log("start saving to indexeddb");var a=indexedDB.open("newReviewsDB",12);a.onerror=function(a){console.log("indexedDB error for newReviewsDB: "+this.error)};a.onsuccess=function(a){console.log("Database newReviews initialised succesfully");
a=a.target.result;a.onerror=function(a){console.log("Database newReview error: "+a.target.errorCode)};var b=a.transaction(["NewReview"],"readwrite");a=b.objectStore("NewReview");a.put(f);b.oncomplete=function(){console.log("Transaction completed: database modification finished")};b.onerror=function(){console.log("Transaction not opened due to error: "+b.error)};console.log("REPORT ///////////////////////////////");console.log("objectStore indexNames: "+a.indexNames);console.log("objectStore keyPath: "+
a.keyPath);console.log("objectStore name: "+a.name);console.log("objectStore transaction: "+a.transaction);console.log("objectStore autoIncrement: "+a.autoIncrement);console.log("///////////////////////////////")};a.onupgradeneeded=function(a){console.log("onupgradeneeded request triggered: "+a);a=a.target.result;a.onerror=function(a){console.log("Error loading database")};a.onversionchange=function(a){console.log("version changed, user should be informed")};a.createObjectStore("NewReview",{keyPath:"name"});
console.log("onupgradeneeded event triggered, object store restaurants created")}}b.preventDefault();var d=self.restaurant.id;b=document.getElementById("reviewer_name_fld").value;var e=document.getElementById("rating_fld").value,g=document.getElementById("comment_text_fld").value,f={restaurant_id:d,name:b,rating:e,comments:g};console.log("id\x3d"+d);navigator.onLine?(console.log("navigator is online"),postData("http://localhost:1337/reviews/",f).then(function(a){console.log("restaurant id "+d+" added to db")}).catch(function(a){console.log(a)})):
(console.log("navigator offline. Save post request to indexeddb"),c(),a())}function postData(b,c){return fetch(b,{method:"POST",body:JSON.stringify(c),headers:{"content-type":"application/json"}}).then(function(a){a.json}).catch(function(a){console.log("Could not create the review, error: "+a)}).then(function(a){return console.log("Review created")})}
var fillRestaurantHoursHTML=function(b){b=void 0===b?self.restaurant.operating_hours:b;var c=document.getElementById("restaurant-hours"),a;for(a in b){var d=document.createElement("tr"),e=document.createElement("td");e.innerHTML=a;d.appendChild(e);e=document.createElement("td");e.innerHTML=b[a];d.appendChild(e);c.appendChild(d)}},createReviewHTML=function(b){var c=document.createElement("li"),a=document.createElement("div"),d=document.createElement("section");a.innerHTML=b.name;a.tabIndex="0";c.appendChild(d);
d.appendChild(a);a=document.createElement("p");a.innerHTML="Rating: "+b.rating;c.appendChild(a);a=document.createElement("p");a.innerHTML=b.comments;c.appendChild(a);a=document.createElement("button");a.className="button";a.id="delReview"+b.id;a.innerHTML="Delete Review id:"+b.id;a.onclick=function(a){a.preventDefault();return fetch("http://localhost:1337/reviews/"+b.id,{method:"DELETE"}).then(function(a){a.json}).catch(function(a){console.log("Could not delete the review, error: "+a)}).then(function(){console.log("Review deleted, id: "+
b.id);alert("Review deleted, id: "+b.id)})};c.append(a);return c},fillBreadcrumb=function(b){b=void 0===b?self.restaurant:b;var c=document.getElementById("breadcrumb"),a=document.createElement("li");a.innerHTML=b.name;c.appendChild(a)},getParameterByName=function(b,c){c||(c=window.location.href);b=b.replace(/[\[\]]/g,"\\$\x26");console.log("getParameterByName f url is: "+c+" name is: "+b);return(b=(new RegExp("[?\x26]"+b+"(\x3d([^\x26#]*)|\x26|#|$)")).exec(c))?b[2]?decodeURIComponent(b[2].replace(/\+/g,
" ")):"":null};